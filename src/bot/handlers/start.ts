import TelegramBot, { Message } from 'node-telegram-bot-api';
import { findOrCreateUser } from '../../services/user';
import { processReferralCode } from '../../services/referral';
import logger from '../../utils/logger';
import { MessageHandler } from './types';

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
 * @param bot - —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
 */
export const handleStart: MessageHandler = (bot: TelegramBot) => async (message: Message, match?: RegExpMatchArray | null): Promise<void> => {
  try {
    const chatId = message.chat.id;
    const { first_name, last_name, username } = message.from || {};
    
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await findOrCreateUser(
      message.from?.id || 0,
      first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      last_name,
      username
    );
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –≤ –∫–æ–º–∞–Ω–¥–µ /start
    if (match && match[1]) {
      const referralCode = match[1].trim();
      
      if (referralCode) {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
        await processReferralCode(message.from?.id || 0, referralCode)
          .then(success => {
            if (success) {
              bot.sendMessage(chatId, 'üéÅ –í—ã —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥! –í–∞–º –∏ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É –≤–∞—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—É–¥—É—Ç –Ω–∞—á–∏—Å–ª–µ–Ω—ã –±–æ–Ω—É—Å—ã.');
            }
          })
          .catch(error => {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞: ${error}`);
            bot.sendMessage(chatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –≤—ã —É–∂–µ –±—ã–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã.');
          });
      }
    }
    
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    const welcomeMessage = `
üîê *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VPN Bot!*

–ù–∞—à –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:
‚Ä¢ –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø –∫ –±—ã—Å—Ç—Ä–æ–º—É –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º—É VPN
‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É

üìù *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/subscription ‚Äî –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
/buy ‚Äî –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É
/profile ‚Äî –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ
/referral ‚Äî –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
/help ‚Äî –ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ üëá
    `;
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    const keyboard = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üí≥ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'buy' },
            { text: 'üîë –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'subscription' }
          ],
          [
            { text: 'üë§ –ü—Ä–æ—Ñ–∏–ª—å', callback_data: 'profile' },
            { text: 'üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data: 'referral' }
          ],
          [
            { text: '‚ùì –ü–æ–º–æ—â—å', callback_data: 'help' }
          ]
        ]
      },
      parse_mode: 'Markdown' as TelegramBot.ParseMode
    };
    
    await bot.sendMessage(chatId, welcomeMessage, keyboard);
  } catch (error) {
    logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start: ${error}`);
    bot.sendMessage(message.chat.id, 'üòû –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}; 