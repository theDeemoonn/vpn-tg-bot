import TelegramBot, { Message } from 'node-telegram-bot-api';
import { prisma } from '../../services/database';
import { ensureUserHasReferralCode, getUserReferrals } from '../../services/referral';
import logger from '../../utils/logger';
import { MessageHandler } from './types';

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /referral
 * @param bot - —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
 */
export const handleReferral: MessageHandler = (bot: TelegramBot) => async (message: Message): Promise<void> => {
  try {
    const chatId = message.chat.id;
    const telegramId = message.from?.id || 0;
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.user.findUnique({
      where: { telegramId: BigInt(telegramId) }
    });
    
    if (!user) {
      bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º.');
      return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const referralCode = await ensureUserHasReferralCode(user.id);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const referrals = await getUserReferrals(user.id);
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
    // –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ referralProgram –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω—É–∂–Ω–æ –µ—ë —Å–æ–∑–¥–∞—Ç—å
    const activeProgram = await prisma.$queryRaw`
      SELECT * FROM "ReferralProgram" 
      WHERE "isActive" = true AND ("endDate" IS NULL OR "endDate" > NOW())
      LIMIT 1
    `;
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ
    let referralMessage = `
üë• *–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞*

–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: \`${referralCode}\`

üîó –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏:
\`https://t.me/${(await bot.getMe()).username}?start=${referralCode}\`

`;
    
    if (activeProgram && Array.isArray(activeProgram) && activeProgram.length > 0) {
      const program = activeProgram[0];
      referralMessage += `
üéÅ *–¢–µ–∫—É—â–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞: ${program.name}*
`;
      
      if (program.bonusType === 'DAYS') {
        referralMessage += `–í—ã –ø–æ–ª—É—á–∏—Ç–µ ${program.bonusValue} –¥–Ω–µ–π VPN –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ñ–æ—Ä–º–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É.`;
      } else if (program.bonusType === 'DISCOUNT') {
        referralMessage += `–í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É ${program.bonusValue}% –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞.`;
      }
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –±–æ–Ω—É—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userBonus = await prisma.$queryRaw`
      SELECT "referralBonus" FROM "User" WHERE "id" = ${user.id}
    `;
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω–æ–º –±–æ–Ω—É—Å–µ
    if (userBonus && Array.isArray(userBonus) && userBonus.length > 0 && userBonus[0].referralBonus > 0) {
      referralMessage += `\n\nüî• –£ –≤–∞—Å –Ω–∞–∫–æ–ø–ª–µ–Ω–æ ${userBonus[0].referralBonus} –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π. –û–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–∫—É–ø–∫–µ!`;
    }
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
    referralMessage += `\n\nüë• –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏: ${referrals.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`;
    
    if (referrals.length > 0) {
      referralMessage += `\n\n*–í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:*\n`;
      
      for (let i = 0; i < Math.min(referrals.length, 5); i++) {
        const referral = referrals[i];
        referralMessage += `${i + 1}. ${referral.firstName} ${referral.lastName || ''} (${new Date(referral.createdAt).toLocaleDateString()})\n`;
      }
      
      if (referrals.length > 5) {
        referralMessage += `–∏ –µ—â–µ ${referrals.length - 5} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n`;
      }
    }
    
    // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
    const keyboard = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–¥–æ–º', switch_inline_query: `–ü—Ä–∏–≤–µ—Ç! –Ø –∏—Å–ø–æ–ª—å–∑—É—é –Ω–∞–¥–µ–∂–Ω—ã–π VPN —Å–µ—Ä–≤–∏—Å. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –ø–æ –º–æ–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ: https://t.me/${(await bot.getMe()).username}?start=${referralCode}` }
          ],
          [
            { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }
          ]
        ]
      },
      parse_mode: 'Markdown' as TelegramBot.ParseMode
    };
    
    await bot.sendMessage(chatId, referralMessage, keyboard);
  } catch (error) {
    logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /referral: ${error}`);
    bot.sendMessage(message.chat.id, 'üòû –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}; 